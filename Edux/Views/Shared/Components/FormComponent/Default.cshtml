@model Component
@{ var form = (Form)ViewBag.Form;}
@{ var rowCount = form.Fields.Select(s => s.Row).Distinct().Count();}

@{ 
    var tabCount = form.Fields.Select(s => s.Tab).Distinct().Count();
    var tabs = form.Fields.OrderBy(o => o.Position).Select(s => s.Tab).Distinct().ToArray();
}

<!-- BEGIN THEME GLOBAL STYLES -->
<link href="/metronic/global/plugins/bootstrap-fileinput/bootstrap-fileinput.css" rel="stylesheet" type="text/css" />
<!-- END THEME GLOBAL STYLES -->
<link href="~/metronic/global/css/components-md.min.css" rel="stylesheet" type="text/css" />
<h2>@Model.DisplayName</h2>
<br />
<form id="@form.Name" asp-controller="Home" asp-action="SaveForm" method="post" enctype="multipart/form-data">
    <input type="hidden" name="FormId" id="FormId" value="@form.Id" />
    <input type="hidden" name="Mode" id="Mode" value="@ViewBag.Mode" />
    <input type="hidden" name="RowId" id="RowId" value="@ViewBag.RowId" />
    <input type="hidden" name="ReturnUrl" id="ReturnUrl" value="@ViewBag.ReturnUrl" />
    <ul class="nav nav-tabs">
        @for (var k = 1; k <= tabCount; k++)
        {
            <li @(k==1?"class=active":"")>
                <a href="#tab_@k" data-toggle="tab"> @tabs[k-1] </a>
            </li>
        }
        
        
    </ul>
    <div class="tab-content">
        @for (var k = 1; k <= tabCount; k++)
        {
            <div class="tab-pane fade @(k==1?"active":"") in" id="tab_@k">

                <div class="form-horizontal">

                    @for (var i = 1; i <= rowCount; i++)
                {
                        <div class="row">
                            @{ var colCount = form.Fields.Where(s => s.Tab == tabs[k - 1] && s.Row == i).Select(s => s.Col).Distinct().Count(); }
                            @for (var j = 1; j <= colCount; j++)
                            {

                                <div class="col-md-@(12 / colCount)">
                                    @foreach (var field in form.Fields.Where(s => s.Tab == tabs[k - 1] && s.Row == i && s.Col == j).OrderBy(f => f.Position))
                                                {
                                                    int uploadIndex = 0;
                                        <input type="hidden" name="@(field.PropertyId).EntityId" id="@(field.Name).EntityId" value="@field.Property.EntityId" />
                                                   switch (field.EditorType)
                                                    {

                                                        case EditorType.Text:
                                                <div class="form-group">
                                                    <label for="@field.Name" class="control-label col-md-2">@field.DisplayName</label><div class="col-md-10">
                                                        <input type="text" name="@field.PropertyId" id="@field.Name" placeholder="@field.DisplayName" required="@(field.Property.IsRequired)" value="@(ViewBag.Mode == "edit" || ViewBag.Mode == "delete"?((List<PropertyValue>)ViewBag.RowValues).FirstOrDefault(v=>v.PropertyId == field.PropertyId).Value:field.Property.DefaultValue)" class="form-control" />
                                                    </div>
                                                </div>
                                                break;
                                            case EditorType.TextArea:
                                                <div class="form-group">
                                                    <label for="@field.Name" class="control-label col-md-2">@field.DisplayName</label><div class="col-md-10">
                                                        <textarea name="@field.PropertyId" id="@field.Name" placeholder="@field.DisplayName" required="@(field.Property.IsRequired)" class="form-control">@(ViewBag.Mode == "edit" || ViewBag.Mode == "delete" ? ((List<PropertyValue>)ViewBag.RowValues).FirstOrDefault(v=>v.PropertyId == field.PropertyId).Value:field.Property.DefaultValue)</textarea>
                                                    </div>
                                                </div>
                                                break;
                                            case EditorType.Html:

                                                <div class="form-group">
                                                    <label for="@field.Name" class="control-label col-md-2">@field.DisplayName</label><div class="col-md-10">
                                                       <textarea name="@field.PropertyId" id="@field.Name" required="@(field.Property.IsRequired)">@(ViewBag.Mode == "edit" || ViewBag.Mode == "delete" ? ((List<PropertyValue>)ViewBag.RowValues).FirstOrDefault(v=>v.PropertyId == field.PropertyId).Value:field.Property.DefaultValue)</textarea>
                                                    <script>
                                                        CKEDITOR.replace(' @field.Name');
                                                    </script>
                                                    </div>
                                                </div>

                                                break;
                                            case EditorType.Select:
                                                <div class="form-group">
                                                    <label for=" @field.Name" class="control-label col-md-2">@field.DisplayName</label><div class="col-md-10">
                                                        <select name="@field.PropertyId" id="@field.Name" placeholder="@field.DisplayName" required="@(field.Property.IsRequired)" class="form-control">
                                                           @if (field.Property.DataSourceProperty != null) {
                                                foreach (var value in field.Property.DataSourceProperty.PropertyValues) {
                                                    <option value="@value.Id">@value.Value</option>
                                                               }
                                            }
                                                </select>
                                                    </div>
                                                </div>

                                                break;
                                            case EditorType.Checkbox:

                                                <div class="form-group">
                                                    <label for=" @field.Name" class="control-label col-md-2">@field.DisplayName</label>
                                                    <div class="col-md-10">
                                                        <input name="@field.PropertyId" id="@field.Name" type="checkbox" placeholder="@field.DisplayName" checked="@(ViewBag.Mode == "edit" || ViewBag.Mode == "delete"?((List<PropertyValue>)ViewBag.RowValues).FirstOrDefault(v=>v.PropertyId == field.PropertyId).Value:field.Property.DefaultValue)" /><br />
                                                    </div>
                                                </div>

                                                break;

                                            case EditorType.ImageUpload:

                                                <div class="form-group">
                                                    <label for="@field.Name" class="control-label">@field.DisplayName</label>
                                                    <div class="col-md-12" style="padding-left:0px;">

                                                        <div class="fileinput fileinput-new" data-provides="fileinput">
                                                            <input type="hidden" name="@field.PropertyId" id="@field.Name" />
                                                            <input type="hidden" name="@(field.PropertyId).UploadIndex" value="@uploadIndex" />
                                                            @{ uploadIndex++; }
                                                            <div class="fileinput-preview thumbnail" data-trigger="fileinput" style="width: 200px; height: 150px;"> </div>
                                                            <div>
                                                                <span class="btn red btn-outline btn-file">
                                                                    <span class="fileinput-new"> Resim Seç </span>
                                                                    <span class="fileinput-exists"> Değiştir </span>
                                                                    <input type="file" name="upload" />
                                                                </span>
                                                                <a href="javascript:;" class="btn red fileinput-exists" data-dismiss="fileinput"> Kaldır </a>
                                                    

                                                            </div>
                                                        </div>

                                                    </div>
                                                </div>
                                                <div class="clearfix margin-top-10">
                                                    <span class="label label-success">NOT!</span> Resim Uzantısı .jpg .jpeg yada .png olmalıdır..
                                                </div>

                                                break;

                                        }
                                    }
                                </div>
                            }
                            
                        </div>
                        }   
                </div>
            </div>
             }
    </div>
    <input class="btn btn-primary" type="submit" value="@(ViewBag.Mode.ToString().ToLowerInvariant() == "edit"?"Kaydet":(ViewBag.Mode.ToString().ToLowerInvariant() == "delete"?"Sil":"Oluştur"))" />

</form>

<script src="/metronic/global/plugins/bootstrap-fileinput/bootstrap-fileinput.js" type="text/javascript"></script>