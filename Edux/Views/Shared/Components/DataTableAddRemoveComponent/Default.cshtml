@model Component
@using Newtonsoft.Json
@{ var datatable = (DataTable)ViewBag.DataTable;
    var values = (IList<EntityRow>)ViewBag.Values;
    var entityId = "";

}



<!-- /.modal -->
@if(ViewBag.ToolbarMenu != null) { 
<div id="modal@(Model.Name)" class="modal fade" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-full">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true"></button>
                <h4 class="modal-title">@(((IEnumerable<MenuItem>)ViewBag.ToolbarMenu.MenuItems).FirstOrDefault()?.Name)</h4>
            </div>
            <div class="modal-body">

                <iframe src="javascript:void(0);" class="modal@(Model.Name)" style="width:100%;height:700px;"></iframe>

            </div>
            <div class="modal-footer">
                <button type="button" data-dismiss="modal" class="btn dark btn-outline" onclick="refreshPage()">Kapat</button>
            </div>
        </div>
    </div>
</div>
}

<div class="portlet light bordered">

    <div class="portlet-body">

        <div class="table-toolbar">
            <div class="row">
                <div class="col-md-12">

                    @if (ViewBag.ToolbarMenu != null)
                    {
                        @foreach (var item in (IEnumerable<MenuItem>)ViewBag.ToolbarMenu.MenuItems)
                        {
                            <a href="#modal@(Model.Name)" class="btn btn sbold green" onclick="$('.modal@(Model.Name)').attr('src','@item.Url');" data-toggle="modal">@item.Name</a>
                        }

                    }


                </div>
            </div>
        </div>

        <table class="table table-striped table-hover dt-responsive table-bordered order-column" id="@datatable.Name">
            <thead>
                <tr>
                    @{ var order = "";
        var colIndex = 0; }
                    @foreach (var item in datatable.Columns.OrderBy(c => c.Position))
    {
        if (item.OrderBy.HasValue)
        {
            order += "[" + colIndex.ToString() + "," + (item.OrderBy.Value ? "\"asc\"" : "\"desc\"") + "],";
        }
        entityId = item.Property.EntityId;
                <th class="text-nowrap @(colIndex==0?"all":"")">
                    @item.Property.DisplayName
                </th>
colIndex++;
}

                    @if (ViewBag.ActionsMenu != null)
    
        {
                <th data-orderable="false" class="all">Eylemler</th>
}
                </tr>
            </thead>
        
            <tbody>
                @{ var rowIds = values.Select(v => v.RowId).Distinct().ToArray();}
                @foreach (var id in rowIds)
                {
                <tr>
                    @foreach (var item in datatable.Columns.OrderBy(c => c.Position))
    {
                <td>

                    @if (item.Property.DataSourceProperty == null)
    {
        var val = JsonConvert.DeserializeObject<Dictionary<string, string>>(values.Where(v => v.RowId == id).FirstOrDefault().RowValue);

        if (val.ContainsKey(item.PropertyId) && !String.IsNullOrEmpty(item.Property.DisplayFormat))
        {@String.Format(item.Property.DisplayFormat, val[item.PropertyId]) }
else
{ @(val.ContainsKey(item.PropertyId) ? val[item.PropertyId] : "")}
}
                @*else
    {
        var val = item.Property.DataSourceProperty.PropertyValues.FirstOrDefault(f => f.Id == values.Where(v => v.RowId == id && v.PropertyId == item.PropertyId).FirstOrDefault()?.Value);
        if (val != null && !String.IsNullOrEmpty(val.Property.DisplayFormat))
        { @String.Format(val.Property.DisplayFormat, val?.Value) }
        else
        { @val?.Value}

    }*@


                </td>
}
                    @if (ViewBag.ActionsMenu != null)
    {
                <td class="text-nowrap">
                   
                    <div class="btn-group">
                        <button class="btn btn-xs green dropdown-toggle" type="button" data-toggle="dropdown" aria-expanded="false">
                            Eylemler
                            <i class="fa fa-angle-down"></i>
                        </button>
                        <ul class="dropdown-menu pull-left" role="menu">
                            @foreach (var item in (IEnumerable<MenuItem>)ViewBag.ActionsMenu.MenuItems)
    {


                        <li>

                            <a href="#modal@(Model.Name)" onclick="$('.modal@(Model.Name)').attr('src','@(string.Format(item.Url, id))')" data-toggle="modal">@item.Name</a>

                        </li>
}

                        </ul>
                    </div>



                </td>


}


                </tr>
                }
                @*@{ var rowIds = values.Select(v => v.RowId).Distinct().ToArray();}
                                    @foreach (var id in rowIds)
                                    {
                                    <tr>
                                        @foreach (var item in datatable.Columns.OrderBy(c => c.Position))
                        {
                                    <td>

                                        @if (item.Property.DataSourceProperty == null)
                        {
                            var val = values.Where(v => v.RowId == id && v.PropertyId == item.PropertyId).FirstOrDefault();
                            if (val != null && !String.IsNullOrEmpty(val.Property.DisplayFormat))
                            {@String.Format(val.Property.DisplayFormat, val?.Value) }
                    else
                    { @val?.Value}
                    }
                    else
                    {
                    var val = item.Property.DataSourceProperty.PropertyValues.FirstOrDefault(f => f.Id == values.Where(v => v.RowId == id && v.PropertyId == item.PropertyId).FirstOrDefault()?.Value);
                    if (val != null && !String.IsNullOrEmpty(val.Property.DisplayFormat))
                    { @String.Format(val.Property.DisplayFormat, val?.Value) }
                    else
                    { @val?.Value}



                    }


                                    </td>
                    }
                                        @if (!String.IsNullOrEmpty(ViewBag.EditButtonText) || !String.IsNullOrEmpty(ViewBag.DeleteButtonText))
                                        {
                                    <td class="text-nowrap">
                                        @if (!String.IsNullOrEmpty(ViewBag.EditButtonText))
                                        {

                                    <a class="btn btn-primary" href="@String.Format(ViewBag.EditButtonHref, id)">@ViewBag.EditButtonText </a>
                                        }
                                        @if (!String.IsNullOrEmpty(ViewBag.DeleteButtonText))
                                        {

                                    <a class="btn btn-danger" href="@String.Format(ViewBag.DeleteButtonHref, id)">@ViewBag.DeleteButtonText </a>

                                        }
                                    </td>
                                        }
                                    </tr>
                                    }*@
            </tbody>
        </table>
    </div>
</div>
<script>

    $(document).ready(function () {
        @*if (@datatable.Name instanceof $.fn.dataTable.Api) {
            try {
            @(datatable.Name).destroy();
            } catch (ex) {

            }
            $('#@datatable.Name').empty()
        }*@
        @*if (@datatable.Name) {
            alert("Uyarı: @datatable.Name adında birden fazla veri tablosu kullandınız.");
        }*@
        @datatable.Name = $('#@datatable.Name').DataTable({
                "order": [@Html.Raw(order)],
                "responsive": true,
                "pageLength": 100,
                "colReorder": true,
                "language": {
                    "url": "//cdn.datatables.net/plug-ins/1.10.13/i18n/Turkish.json"
                }
            });
    });

    function refreshPage() {
        var href = $('.nav-tabs li.active a').attr('href');
        if (href) {
            window.location.reload();
            window.location = '@(Context.Request.Path)' + href;
        }
        else { 
            window.location.reload();
        }
    }

</script>

