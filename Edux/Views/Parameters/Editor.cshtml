@model IEnumerable<Edux.Models.Parameter>

@{
    ViewData["Title"] = "Editor";
    Layout = null;
}
<br />
<fieldset>
    <legend>Parametreler:</legend>
    <div style="border:1px solid #cccccc; border-top-width:0px; padding:5px;">
    @foreach (var parameter in Model)
    {
        int uploadIndex = 0;
        @switch (parameter.ParameterType)
            {
                case ParameterType.TextArea:

            <div class="form-group">
                <label for="@parameter.Name" class="col-md-2 control-label">@parameter.DisplayName</label>
                <div class="col-md-10">
                    <textarea name="@parameter.Id" id="@parameter.Name" class="form-control" @(parameter.IsRequired ? "required" : "")>@(parameter.ParameterValues.FirstOrDefault(v => v.ComponentId == (string)ViewBag.ComponentId)!=null?parameter.ParameterValues.FirstOrDefault(v => v.ComponentId == (string)ViewBag.ComponentId).Value:"")</textarea>
                </div>
            </div>
                break;


            case ParameterType.SelectMultiple:

                <div class="form-group">
                    <label for="@parameter.Name" class="col-md-2 control-label">@parameter.DisplayName</label>
                    <div class="col-md-10">
                        <select multiple name="@parameter.Id" id="@parameter.Name" class="form-control" @(parameter.IsRequired ? "required" : "")>@(parameter.ParameterValues.FirstOrDefault(v => v.ComponentId == (string)ViewBag.ComponentId)!=null?parameter.ParameterValues.FirstOrDefault(v => v.ComponentId == (string)ViewBag.ComponentId).Value:"")</select>
                    </div>
                </div>
                break;

            case ParameterType.TreeView:

                <div class="form-group">
                    <label for="@parameter.Name" class="col-md-2 control-label">@parameter.DisplayName</label>
                    <div class="col-md-10">
                        <textarea name="@parameter.Id" id="@parameter.Name" class="form-control" @(parameter.IsRequired ? "required" : "")>@(parameter.ParameterValues.FirstOrDefault(v => v.ComponentId == (string)ViewBag.ComponentId)!=null?parameter.ParameterValues.FirstOrDefault(v => v.ComponentId == (string)ViewBag.ComponentId).Value:"")</textarea>
                    </div>
                </div>
                break;

            case ParameterType.SelectDataTable:

                <div class="form-group">
                    <label for="@parameter.Name" class="col-md-2 control-label">@parameter.DisplayName</label>
                    <div class="col-md-10">
                        <select name="@parameter.Id" id="@parameter.Name" class="form-control" @(parameter.IsRequired ? "required" : "")>@(parameter.ParameterValues.FirstOrDefault(v => v.ComponentId == (string)ViewBag.ComponentId)!=null?parameter.ParameterValues.FirstOrDefault(v => v.ComponentId == (string)ViewBag.ComponentId).Value:"")</select>
                    </div>
                </div>
                break;

           

            case ParameterType.SelectForm:

                <div class="form-group">
                    <label for="@parameter.Name" class="col-md-2 control-label">@parameter.DisplayName</label>
                    <div class="col-md-10">

                        <form action="" id="@parameter.Name">
                          @parameter.DisplayName: <input type="text" name="fname">
                            <input type="submit">
                        </form>


                        <select name="@parameter.Id" id="@parameter.Name" form="@parameter.Name" class="form-control" @(parameter.IsRequired ? "required" : "")>@(parameter.ParameterValues.FirstOrDefault(v => v.ComponentId == (string)ViewBag.ComponentId)!=null?parameter.ParameterValues.FirstOrDefault(v => v.ComponentId == (string)ViewBag.ComponentId).Value:"")</select>
                    </div>
                </div>
                break;

            case ParameterType.SelectPage:

                <div class="form-group">
                    <label for="@parameter.Name" class="col-md-2 control-label">@parameter.DisplayName</label>
                    <div class="col-md-10">
                        <select name="@parameter.Id" id="@parameter.Name" class="form-control" @(parameter.IsRequired ? "required" : "")>@(parameter.ParameterValues.FirstOrDefault(v => v.ComponentId == (string)ViewBag.ComponentId)!=null?parameter.ParameterValues.FirstOrDefault(v => v.ComponentId == (string)ViewBag.ComponentId).Value:"")</select>
                    </div>
                </div>
                break;
                

            


              

            case ParameterType.TimePicker:
                <div class="form-group">
                    <label for="@parameter.Name" class="col-md-2 control-label">@parameter.DisplayName</label>
                    <div class="col-md-10">
                        <input type="time" name="@parameter.Id" id="@parameter.Name" class="form-control" @(parameter.IsRequired ? "required" : "") value="@(parameter.ParameterValues.FirstOrDefault(v => v.ComponentId == (string)ViewBag.ComponentId)!=null?parameter.ParameterValues.FirstOrDefault(v => v.ComponentId == (string)ViewBag.ComponentId).Value:"")"/>
                    </div>
                </div>
                break;


            case ParameterType.DateTimePicker:


                <div class="form-group">
                    <label for="@parameter.Name" class="col-md-2 control-label">@parameter.DisplayName</label>
                    <div class="col-md-10">
                        <input type="datetime-local" name="@parameter.Id" id="@parameter.Name" class="form-control" @(parameter.IsRequired ? "required" : "") value="@(parameter.ParameterValues.FirstOrDefault(v => v.ComponentId == (string)ViewBag.ComponentId)!=null?parameter.ParameterValues.FirstOrDefault(v => v.ComponentId == (string)ViewBag.ComponentId).Value:"")" />
                    </div>
                </div>

                break;

            case ParameterType.DatePicker:


                <div class="form-group">
                    <label for="@parameter.Name" class="col-md-2 control-label">@parameter.DisplayName</label>
                    <div class="col-md-10">
                        <input type="date" name="@parameter.Id" id="@parameter.Name" class="form-control" @(parameter.IsRequired ? "required" : "") value="@(parameter.ParameterValues.FirstOrDefault(v => v.ComponentId == (string)ViewBag.ComponentId)!=null?parameter.ParameterValues.FirstOrDefault(v => v.ComponentId == (string)ViewBag.ComponentId).Value:"")" />
                    </div>
                </div>

                break;

            case ParameterType.ImageUpload:
                <div class="form-group">
                    <label for="@parameter.Name" class="control-label" style="padding-left:15px;">@parameter.DisplayName@(parameter.IsRequired ? "*" : "")</label>
                    <div class="col-md-12">
                        <div class="fileinput fileinput-new" data-provides="fileinput">

                            <input type="hidden" name="@parameter.Id" id="@parameter.Name" value="@(ViewBag.Mode == "edit" || ViewBag.Mode == "delete"?((List<PropertyValue>)ViewBag.RowValues).FirstOrDefault(v=>v.Id == parameter.Id)?.Value: parameter.DefaultValue)" />
                            <input type="hidden" name="@(parameter.Id).UploadIndex" value="@uploadIndex" />
                            @{ uploadIndex++; }
                            <div value="@(ViewBag.Mode == "edit" || ViewBag.Mode == "delete"?((List<PropertyValue>)ViewBag.RowValues).FirstOrDefault(v=>v.PropertyId == parameter.Id)?.Value:parameter.DefaultValue)" class="fileinput-preview thumbnail" data-trigger="fileinput" style="width: 200px; height: 150px;"><img src="@(ViewBag.Mode == "edit" || ViewBag.Mode == "delete"?((List<PropertyValue>)ViewBag.RowValues).FirstOrDefault(v=>v.Id == parameter.Id)?.Value:parameter.DefaultValue)"> </div>
                            <div>
                                <span class="btn red btn-outline btn-file">
                                    <span class="fileinput-new"> Resim Seç </span>
                                    <span class="fileinput-exists"> Deðiþtir </span>
                                    <input type="file" name="upload" />
                                </span>
                                <a href="javascript:;" class="btn red fileinput-exists" data-dismiss="fileinput"> Kaldýr </a>


                            </div>
                        </div>

                    </div>
                </div>
                                                                    <div class="clearfix margin-top-10" style="padding-bottom:10px;">
                                                                        <span class="label label-success">NOT!</span> Resim Uzantýsý .jpg .jpeg yada .png olmalýdýr..
                                                                    </div>

                                    break;






                                case ParameterType.Media:

                                    <div class="form-group">
                                        <input type="hidden" name="@parameter.Id" id="@parameter.Name" value="@(ViewBag.Mode == "edit" || ViewBag.Mode == "delete"?((List<PropertyValue>)ViewBag.RowValues).FirstOrDefault(v=>v.Id == parameter.Id)?.Value: parameter.DefaultValue)" />
                                        <input type="hidden" name="@(parameter.Id).UploadIndex" value="@uploadIndex" />
                                        @{ uploadIndex++; }



                                        <label for=" @parameter.Name" class="control-label col-md-3">@parameter.DisplayName</label>
                                        <div class="col-md-9">

                                            <div class="input-group">
                                                <input type="text"  name="@parameter.Id" id="Photo" placeholder="@parameter.DisplayName" required="@(parameter.IsRequired)" value="@(ViewBag.Mode == "edit" || ViewBag.Mode == "delete"?((List<PropertyValue>)ViewBag.RowValues).FirstOrDefault(v=>v.Id == parameter.Id)?.Value:parameter.DefaultValue)" class="form-control" />
                                                <span class="input-group-btn">
                                                    <a class="btn btn-info" id="uploadModal" onclick="browseMedia('Photo')">...</a>
                                                </span>
                                            </div>
                                        </div>
                                        @Html.ValidationMessageFor(model => parameter.Name, "", new { @class = "text-danger" })
                                    </div>

                                    @Html.Partial("_BrowseMedia", new ViewDataDictionary(this.ViewData) { { "element", "Photo" } })




                                                break;



                                            case ParameterType.Text:

                <div class="form-group">
                    <label for="@parameter.Name" class="col-md-2 control-label">@parameter.DisplayName</label>
                    <div class="col-md-10">
                        <input type="text" name="@parameter.Id" id="@parameter.Name" class="form-control" @(parameter.IsRequired ? "required" : "") value="@(parameter.ParameterValues.FirstOrDefault(v => v.ComponentId == (string)ViewBag.ComponentId)!=null?parameter.ParameterValues.FirstOrDefault(v => v.ComponentId == (string)ViewBag.ComponentId).Value:"")" />
                    </div>
                </div>
                break;

            case ParameterType.Html:

                <div class="form-group">
                    <label for="@parameter.Name" class="col-md-2 control-label">@parameter.DisplayName</label>
                    <div class="col-md-10">
                        <textarea name="@parameter.Id" id="@parameter.Name" class="form-control" @(parameter.IsRequired ? "required" : "")>@(parameter.ParameterValues.FirstOrDefault(v => v.ComponentId == (string)ViewBag.ComponentId)!=null?parameter.ParameterValues.FirstOrDefault(v => v.ComponentId == (string)ViewBag.ComponentId).Value:"")</textarea>
                    </div>
                </div>
                break;

            case ParameterType.Select:

                <div class="form-group">
                    <label for="@parameter.Name" class="col-md-2 control-label">@parameter.DisplayName</label>
                    <div class="col-md-10">
                        <select name="@parameter.Id" id="@parameter.Name" class="form-control" @(parameter.IsRequired ? "required" : "")>@(parameter.ParameterValues.FirstOrDefault(v => v.ComponentId == (string)ViewBag.ComponentId)!=null?parameter.ParameterValues.FirstOrDefault(v => v.ComponentId == (string)ViewBag.ComponentId).Value:"")</select>
                    </div>
                </div>
                break;

            case ParameterType.Checkbox:

                <div class="form-group">
                    <label for="@parameter.Name" class="col-md-2 control-label">@parameter.DisplayName</label>
                    <div class="col-md-10">
                        <input type="checkbox" name="@parameter.Id" id="@parameter.Name" class="form-control" @(parameter.IsRequired ? "required" : "") value="@(parameter.ParameterValues.FirstOrDefault(v => v.ComponentId == (string)ViewBag.ComponentId)!=null?parameter.ParameterValues.FirstOrDefault(v => v.ComponentId == (string)ViewBag.ComponentId).Value:"")" />
                    </div>
                </div>
                break;

            case ParameterType.Tel:

                <div class="form-group">
                    <label for="@parameter.Name" class="col-md-2 control-label">@parameter.DisplayName</label>
                    <div class="col-md-10">
                        <input type="tel"  name="@parameter.Id" id="@parameter.Name" class="form-control" @(parameter.IsRequired ? "required" : "")>@(parameter.ParameterValues.FirstOrDefault(v => v.ComponentId == (string)ViewBag.ComponentId)!=null?parameter.ParameterValues.FirstOrDefault(v => v.ComponentId == (string)ViewBag.ComponentId).Value:"")>
                    </div>
                </div>
                break;

            case ParameterType.Email:

                <div class="form-group">
                    <label for="@parameter.Name" class="col-md-2 control-label">@parameter.DisplayName</label>
                    <div class="col-md-10">
                        <input type="tel"  name="@parameter.Id" id="@parameter.Name" class="form-control" @(parameter.IsRequired ? "required" : "")>@(parameter.ParameterValues.FirstOrDefault(v => v.ComponentId == (string)ViewBag.ComponentId) != null ? parameter.ParameterValues.FirstOrDefault(v => v.ComponentId == (string)ViewBag.ComponentId).Value : "")>
                    </div>
                </div>
                break;

            case ParameterType.Number:

                <div class="form-group">
                    <label for="@parameter.Name" class="col-md-2 control-label">@parameter.DisplayName</label>
                    <div class="col-md-10">
                        <input type="tel"  name="@parameter.Id" id="@parameter.Name" class="form-control" @(parameter.IsRequired ? "required" : "")>@(parameter.ParameterValues.FirstOrDefault(v => v.ComponentId == (string)ViewBag.ComponentId) != null ? parameter.ParameterValues.FirstOrDefault(v => v.ComponentId == (string)ViewBag.ComponentId).Value : "")>
                    </div>
                </div>
                break;

            case ParameterType.Hidden:

                <div class="form-group">
                    <label for="@parameter.Name" class="col-md-2 control-label">@parameter.DisplayName</label>
                    <div class="col-md-10">
                        <input type="tel"  name="@parameter.Id" id="@parameter.Name" class="form-control" @(parameter.IsRequired ? "required" : "")>@(parameter.ParameterValues.FirstOrDefault(v => v.ComponentId == (string)ViewBag.ComponentId) != null ? parameter.ParameterValues.FirstOrDefault(v => v.ComponentId == (string)ViewBag.ComponentId).Value : "")>
                    </div>
                </div>
                break;

            case ParameterType.Password:

                <div class="form-group">
                    <label for="@parameter.Name" class="col-md-2 control-label">@parameter.DisplayName</label>
                    <div class="col-md-10">
                        <input type="tel"  name="@parameter.Id" id="@parameter.Name" class="form-control" @(parameter.IsRequired ? "required" : "")>@(parameter.ParameterValues.FirstOrDefault(v => v.ComponentId == (string)ViewBag.ComponentId) != null ? parameter.ParameterValues.FirstOrDefault(v => v.ComponentId == (string)ViewBag.ComponentId).Value : "")>
                    </div>
                </div>
                break;


        }

                                }
        </div>
</fieldset>